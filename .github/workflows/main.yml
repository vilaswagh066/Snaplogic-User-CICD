on:
  push:
    branches:
      - dev
      - qa
      - main

jobs:
  qa-promotion:
    # Removed the 'needs' dependency to fix the issue
    runs-on: ubuntu-latest
    environment: qa

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up environment variables
        run: |
          echo "USER=${{ secrets.USER }}" >> $GITHUB_ENV
          echo "PASS=${{ secrets.PASS }}" >> $GITHUB_ENV
          echo "URL=${{ vars.URL }}" >> $GITHUB_ENV
          echo "ORG=${{ vars.ORG }}" >> $GITHUB_ENV
          echo "PROJECT_SPACE_QA=${{ vars.PROJECT_SPACE_QA }}" >> $GITHUB_ENV
          echo "PROJECT_QA=${{ vars.PROJECT_QA }}" >> $GITHUB_ENV
          echo "REPO_NAME=${{ github.repository }}" >> $GITHUB_ENV
          echo "BRANCH_NAME=${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Create QA Project
        id: create-qa-project
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" -X POST ${{ env.URL }}/api/1/rest/public/assetapi/project/${{ env.ORG }}/${{ env.PROJECT_SPACE_QA }}/${{ env.PROJECT_QA }} \
          -u ${{ env.USER }}:${{ env.PASS }} -H "Content-Type: application/json" \
          -d '{"permissions":[{"perms": ["R","W","X"],"subject_type": "USER","inherit": true,"subject": "'${{ env.USER }}'"}]}' \
          --trace-ascii /dev/stdout)
          if [ "$response" = "409" ]; then
            echo "status=conflict" >> $GITHUB_ENV
          else
            echo "status=created" >> $GITHUB_ENV
          fi

      - name: Handle Conflict
        if: env.status == 'conflict'
        run: |
          echo "The asset conflicts with an existing asset and cannot be created."
          # Additional conflict-handling tasks can be added here

      - name: Checkout
