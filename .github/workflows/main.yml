name: Run Curl Command

on:
  push:
    branches:
      - qa

jobs:
  execute-curl:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up environment variables
        run: |
          echo "USER=${{ secrets.USER }}" >> $GITHUB_ENV
          echo "PASS=${{ secrets.PASS }}" >> $GITHUB_ENV
          echo "URL=${{ vars.URL }}" >> $GITHUB_ENV
          echo "ORG=${{ vars.ORG }}" >> $GITHUB_ENV
          echo "PROJECT_SPACE_QA=${{ vars.PROJECT_SPACE_QA }}" >> $GITHUB_ENV
          echo "PROJECT_QA=${{ vars.PROJECT_QA }}" >> $GITHUB_ENV
          echo "REPO_NAME=${{ github.repository }}" >> $GITHUB_ENV
          echo "BRANCH_NAME=${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Execute Curl Command to Create Project
        id: create-qa-project
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" -X POST "https://elastic.snaplogic.com/api/1/rest/public/assetapi/project/Partners/Nihilent/snaplogic-user-test123" \
          -u "${{ secrets.USER }}:${{ secrets.PASS }}" -H "Content-Type: application/json" \
          -d '{
                "permissions": [
                  {
                    "perms": ["R", "W", "A", "X"],
                    "subject_type": "USER",
                    "inherit": true,
                    "subject": "sanghamitra.pattanayak@nihilent.com"
                  }
                ]
              }')

          if [ "$response" = "409" ]; then
            echo "::set-output name=status::conflict"
          else
            echo "::set-output name=status::created"
          fi

      - name: Handle Conflict
        if: steps.create-qa-project.outputs.status == 'conflict'
        run: |
          echo "The asset conflicts with an existing asset, so cannot create."
          # Add any additional tasks to handle the conflict here

      - name: Checkout Code to QA
        if: steps.create-qa-project.outputs.status == 'created' || steps.create-qa-project.outputs.status == 'conflict'
        run: |
          curl -X POST "${{ vars.URL }}/api/1/rest/public/project/checkout/${{ vars.ORG }}/${{ vars.PROJECT_SPACE_QA }}/${{ vars.PROJECT_QA }}" \
          -u "${{ secrets.USER }}:${{ secrets.PASS }}" -H "Content-Type: application/json" \
          -d '{"repo":"${{ github.repository }}","ref":"${{ github.ref_name }}"}' \
          --trace-ascii /dev/stdout
