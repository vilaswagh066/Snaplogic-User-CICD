name: Run Curl Command

on:
  push:
    branches:
      - qa

jobs:
  execute-curl:
    runs-on: ubuntu-latest

    steps:
      # Set up environment variables dynamically
      - name: Set up environment variables
        run: |
          echo "USER=${{ secrets.USER }}" >> $GITHUB_ENV
          echo "PASS=${{ secrets.PASS }}" >> $GITHUB_ENV
          echo "URL=${{ vars.URL }}" >> $GITHUB_ENV
          echo "ORG=${{ vars.ORG }}" >> $GITHUB_ENV
          echo "PROJECT_SPACE_PROD=${{ vars.PROJECT_SPACE_PROD }}" >> $GITHUB_ENV
          echo "PROJECT_PROD=${{ vars.PROJECT_PROD }}" >> $GITHUB_ENV
          echo "REPO_NAME=${{ github.repository }}" >> $GITHUB_ENV
          echo "BRANCH_NAME=${{ github.ref_name }}" >> $GITHUB_ENV

      # Check out the repository
      - name: Check out repository
        uses: actions/checkout@v2

      # Execute Curl Command to Create Project
      - name: Execute Curl Command to Create Project
        id: create-qa-project
        run: |
          response=$(curl -s ---v -o /dev/null -w "%{http_code}" -X POST "$URL/api/1/rest/public/assetapi/project/$ORG/$PROJECT_SPACE_QA/$PROJECT_QA" \
          -u "$USER:$PASS" -H "Content-Type: application/json" \
          -d '{
                "permissions": [
                  {
                    "perms": ["R", "W", "A", "X"],
                    "subject_type": "USER",
                    "inherit": true,
                    "subject": "'"$USER"'"
                  }
                ]
              }')

          if [ "$response" = "409" ]; then
            echo "status=conflict" >> $GITHUB_ENV
          else
            echo "status=created" >> $GITHUB_ENV
          fi

      # Handle Conflict
      - name: Handle Conflict
        if: env.status == 'conflict'
        run: |
          echo "The asset conflicts with an existing asset, so cannot create."
          # Add any additional tasks to handle the conflict here

      # Checkout Code to QA
      - name: Checkout Code to QA
        if: env.status == 'created' || env.status == 'conflict'
        run: |
          curl -X POST "$URL/api/1/rest/public/project/checkout/$ORG/$PROJECT_SPACE_QA/$PROJECT_QA" \
          -u "$USER:$PASS" \
          -H "Content-Type: application/json" \
          -d '{
                "repo": "vilaswagh066/Snaplogic-User-CICD",
                "ref": "qa"
              }' \
          --trace-ascii /dev/stdout
